import os
import json
from dotenv import load_dotenv
from langchain_core.tools import tool
from langchain_core.messages import HumanMessage
from langchain_openai import ChatOpenAI
from langgraph.prebuilt import create_react_agent

# Load environment variables
load_dotenv()

# --- Step 1: Define the Composer Agent System Prompt ---
COMPOSER_SYSTEM_PROMPT = """
You are COMPOSER, a PREMIUM AI banner designer specializing in creating SELLABLE, PROFESSIONAL-GRADE banners that rival high-end design agencies.

**MISSION:** Create stunning, market-ready banners with perfect composition, visual hierarchy, and professional polish.

**PROFESSIONAL DESIGN PRINCIPLES:**
- **Visual Hierarchy**: Establish clear focal points and reading flow
- **Golden Ratio**: Use 1.618 proportions for pleasing layouts
- **Rule of Thirds**: Position key elements on intersection points
- **Typography Scale**: Use harmonious font size relationships (1.2x, 1.5x, 2x, 3x)
- **Color Theory**: Apply complementary colors, proper contrast ratios
- **White Space**: Use strategic negative space for breathing room
- **Visual Balance**: Distribute visual weight evenly across composition

**CANVAS SAFETY RULES (CRITICAL):**
- **Safe Zone**: Keep all important elements 40px+ from canvas edges
- **Text Boundaries**: Ensure all text fits within canvas with proper margins
- **Image Clipping**: All images must be properly sized and positioned within canvas
- **Overflow Prevention**: NO element should extend beyond canvas boundaries
- **Responsive Scaling**: Elements should scale proportionally to canvas size

**ADVANCED COMPOSITION TECHNIQUES:**
1. **Layered Depth**: Use multiple z-index layers for visual richness
2. **Gradient Overlays**: Apply sophisticated color transitions
3. **Shadow Systems**: Create depth with consistent shadow directions
4. **Blend Modes**: Use multiply, screen, overlay for professional effects
5. **Opacity Variations**: Create visual hierarchy through transparency
6. **Geometric Precision**: Use mathematical relationships for spacing

**TYPOGRAPHY MASTERY:**
- **Headline**: 10-15% of canvas height, bold, high contrast
- **Subheadline**: 60-70% of headline size, medium weight
- **Body Text**: 40-50% of headline size, regular weight
- **CTA**: 70-80% of headline size, contrasting color
- **Line Height**: 1.2-1.4x font size for readability
- **Letter Spacing**: Adjust for optimal readability and style

**PROFESSIONAL LAYOUT FORMULAS:**
```
Canvas Margins: 40px minimum from all edges
Headline Position: Top 15-25% of canvas
Main Content: Center 40-60% of canvas  
CTA/Footer: Bottom 15-25% of canvas
Element Spacing: 20-40px between major elements
Text Blocks: 15-25px vertical spacing
```

**ADVANCED FABRIC.JS TECHNIQUES:**
- Use complex gradients (linear, radial, conic)
- Apply sophisticated filters and effects
- Create custom shapes with path objects
- Implement advanced text effects (shadows, glows, outlines)
- Use group objects for complex compositions
- Apply transforms and positioning with precision

**ASSET INTEGRATION STRATEGY:**
- **Background Images**: Full canvas coverage with proper aspect ratio
- **Illustrations**: Strategic placement with appropriate scaling  
- **SVG Elements**: Use as decorative accents and graphic elements
- **Fonts**: Apply consistently across typography hierarchy
- **Color Harmonies**: Extract colors from assets for cohesive palette

**QUALITY ASSURANCE CHECKLIST:**
✓ All elements within canvas boundaries
✓ Text is readable and properly sized
✓ Visual hierarchy is clear and logical
✓ Colors create proper contrast and harmony
✓ Spacing follows mathematical proportions
✓ Assets are properly integrated and scaled
✓ Overall composition is balanced and professional

**MANDATORY CALCULATIONS:**
- Calculate exact positions to prevent overflow
- Use percentage-based sizing for responsiveness
- Implement mathematical spacing relationships
- Apply consistent margin and padding systems

**OUTPUT REQUIREMENTS:**
- Valid Fabric.js v5.3.0 JSON only
- No explanations or additional text
- Production-ready for immediate use
- Professional-grade visual quality
- Perfect canvas boundary management

Transform the provided assets and design brief into a stunning, sellable banner that commands premium pricing.
"""

# --- Step 2: Define the Composer Agent Tool ---
@tool
def compose_fabric_banner(
    banner_prompt: str,
    assets: list,
    resolution: list = [1080, 1080]
) -> str:
    """
    Compose a Fabric.js v5.3.0 JSON banner using the prompt and assets.
    Args:
        banner_prompt (str): The original banner prompt that is generated by the banner_design_researcher tool.
        assets (list): List of asset dicts (type, url, description, etc).
        resolution (list): [width, height] of the banner.
    Returns:
        str: Fabric.js v5.3.0 JSON string.
    """
    print('Composing banner...')
    print('Resolution:', str(resolution[0]) + 'x' + str(resolution[1]))
    llm = ChatOpenAI(
        model="o3-2025-04-16",
        openai_api_key=os.getenv("OPENAI_API_KEY"),
        max_tokens=50000,
        reasoning_effort="high"
        # o3 model only supports default temperature=1
    )
    # Compose the input for the LLM with enhanced context
    system = COMPOSER_SYSTEM_PROMPT
    
    # Extract design elements for better composition
    asset_summary = []
    font_assets = [a for a in assets if a.get("type") == "font"]
    background_assets = [a for a in assets if a.get("type") == "background"]
    illustration_assets = [a for a in assets if a.get("type") in ["illustration", "decoration"]]
    
    user = f"""
**DESIGN BRIEF:**
{banner_prompt}

**CANVAS SPECIFICATIONS:**
- Resolution: {resolution[0]}x{resolution[1]} pixels
- Safe Zone: 40px margins from all edges
- Content Area: {resolution[0]-80}x{resolution[1]-80} pixels
- Aspect Ratio: {resolution[0]/resolution[1]:.2f}

**AVAILABLE ASSETS:**
{json.dumps(assets, indent=2)}

**COMPOSITION GUIDELINES:**
- Fonts Available: {len(font_assets)} 
- Background Images: {len(background_assets)}
- Graphic Elements: {len(illustration_assets)}
- Use mathematical proportions for spacing
- Implement professional typography hierarchy
- Ensure all elements stay within safe zone boundaries
- Create visual depth through layering and effects

**MANDATORY REQUIREMENTS:**
1. All text must fit within canvas boundaries with proper margins
2. Images must be properly scaled and positioned
3. Use provided assets strategically for maximum visual impact
4. Apply professional color theory and contrast
5. Implement consistent spacing based on canvas dimensions

Generate a premium Fabric.js composition that maximizes visual impact while maintaining perfect boundary control.
"""
    message = [
        {"role": "system", "content": system},
        {"role": "user", "content": user}
    ]
    try:
        response = llm.invoke(message)
        # The LLM should output only the Fabric.js JSON string
        # save the response to a file
        with open("data/composer_engine_response.json", "w") as f:
            f.write(response.content.strip())
        return response.content.strip()
    except Exception as e:
        return f"Error: {e}"

# --- Step 3: Main function for direct execution ---
if __name__ == "__main__":
    # Example usage
    banner_prompt = """
       **1. Banner Text Content:**

   - **Main Headline:** "Become the Next Instagram Sensation!"

   - **Subheadline:** "Transform Your Passion into Influence"

   - **Call-to-Action:** "Start Your Journey Today!"

   - **Footer:** "Follow Your Dreams, Inspire the World"



**2. Layout Structure:**

   - **Main Headline:** Centered at the top, occupying 15% of the banner height.

   - **Subheadline:** Below the main headline, centered, occupying 10% of the banner height.

   - **Call-to-Action:** Centered at the bottom, occupying 10% of the banner height.

   - **Footer:** Small text centered at the very bottom, occupying 5% of the banner height.



**3. Illustrations & Icons:**

   - **Decorative Elements:** Use small, subtle sparkle icons around the text to add glamour. Place them randomly around the headline and subheadline.

   - **Style:** Minimalist and elegant.



**4. Background Composition:**

   - **Image:** A rich woman counting money and sipping wine, filling the entire background.

   - **Overlay:** A semi-transparent dark gradient from top to bottom to ensure text readability.

   - **Lighting Effects:** Soft light effect on the woman to create a focal point.



**5. Typography:**

   - **Main Headline:** Bold sans-serif font (e.g., Montserrat Bold), white, 60px.

   - **Subheadline:** Medium sans-serif font (e.g., Montserrat Medium), light gold, 40px.

   - **Call-to-Action:** Bold script font (e.g., Pacifico), vibrant coral red, 50px.

   - **Footer:** Regular sans-serif font (e.g., Montserrat Regular), white, 20px.



**6. Color Palette:**

   - **White:** #FFFFFF

   - **Light Gold:** #D4AF37

   - **Vibrant Coral Red:** #FF6F61

   - **Dark Overlay:** #000000 with 50% opacity



**7. Visual Effects:**

   - **Text Shadows:** Soft drop shadow on all text to enhance readability.

   - **Glow Effect:** Subtle outer glow on the main headline to make it pop.



**8. Resolution-Awareness:**

   - Ensure all elements are high-resolution and optimized for 1080x1080 pixels to maintain clarity and quality.



This plan provides a detailed blueprint for creating a visually appealing and motivational banner to inspire people to become Instagram influencers.
"""

    
    assets = [
    ]
    resolution = [1080, 1080]
    fabric_json = compose_fabric_banner.invoke({
        "banner_prompt": banner_prompt,
        "assets": assets,
        "resolution": resolution
    })
    with open("data/fabric_json.json", "w") as f:
        f.write(fabric_json)
